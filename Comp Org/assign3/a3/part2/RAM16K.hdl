/**

 *  Sterling Kohel and Joe Montey
 * RAM16K: Memory of 16,384 registers, each 16 bits wide.  

 * The chip supports read and write operations, as follows:

 *     Read:  out(t) = RAM16K[address(t)](t)

 *     Write: If load(t-1)==1 then RAM16K[address(t-1)](t) = in(t-1)

 * In words: the chip always outputs the value stored at the memory 

 * location specified by 'address'. If load==1, the in value is loaded 

 * into the memory location specified by address.  This value becomes 

 * available through the out pin starting from the next time step.

 */


CHIP RAM16K {


    IN  in[16], load, address[14];

    OUT out[16];



    PARTS:



    DMux4Way(in = load, sel = address[12..13], a = loadA, b = loadB, c = loadC, d = loadD);

    RAM4K(in = in, load = loadA, out=outA, address = address[0..11]);
    RAM4K(in = in, load = loadB, out=outB, address = address[0..11]);
    RAM4K(in = in, load = loadC, out=outC, address = address[0..11]);
    RAM4K(in = in, load = loadD, out=outD, address = address[0..11]);

    Mux4Way16(a = outA, b = outB, c = outC, d = outD, sel = address[12..13], out = out);
}
